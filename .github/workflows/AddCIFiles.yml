name: Add_CI_Files

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      python:
        type: boolean
        description: Include Python checks 
      golang:
        type: boolean
        description: Include Golang checks 
      node:
        type: boolean
        description: Include Node checks 
      ts:
        type: boolean
        description: Include Typescript checks 
      flutter:
        type: boolean
        description: Include Flutter checks 
      dart:
        type: boolean
        description: Include Dart checks 
      
      # set default to true
      docker:
        type: boolean
        description: Include Docker checks
        default: true
      shell:
        type: boolean
        description: Include Shell script checks 
        default: true
    
      


jobs:
  
  AddCIFiles:
    runs-on: ubuntu-latest
    steps:
      # Set up data in json format
      - name: Set data
        run: |
          jq -n '$ARGS.named' \
          --arg repo ${{ github.event.repository.name }} \
          --arg python ${{ github.event.inputs.python }} \
          --arg golang ${{ github.event.inputs.golang }} \
          --arg node ${{ github.event.inputs.node }} \
          --arg ts ${{ github.event.inputs.ts }} \
          --arg flutter ${{ github.event.inputs.flutter }} \
          --arg dart ${{ github.event.inputs.dart }} \
          --arg docker ${{ github.event.inputs.docker }} \
          --arg shell ${{ github.event.inputs.shell }} \
          > data.json
      

      # Call Deploybot endpoint
      - name: cURL Request
        run: |  
          curl --location --request POST 'https://listen.devclub.in/github/ci' \
          --header 'Content-Type: application/json' \
          --header 'Authorization: Bearer ${{ secrets.ACTION_SECRET }}' \
          --data-binary '@data.json'
        
      # TO-DO
      # update deploybot endpoint
